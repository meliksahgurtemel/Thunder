/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
  BN,
} from "fuels";

export type AddressInput = { value: string };

export type AddressOutput = { value: string };

export type TokenMetaDataInput = { name: string; symbol: string };

export type TokenMetaDataOutput = { name: string; symbol: string };

export type TokenURIInput = {
  base_uri: string;
  token_id: BigNumberish;
  token_uri: [string, BigNumberish];
};

export type TokenURIOutput = {
  base_uri: string;
  token_id: BN;
  token_uri: [string, BN];
};

interface NftAbiInterface extends Interface {
  functions: {
    admin: FunctionFragment;
    approve: FunctionFragment;
    approved: FunctionFragment;
    balance_of: FunctionFragment;
    burn: FunctionFragment;
    constructor: FunctionFragment;
    is_approved_for_all: FunctionFragment;
    max_supply: FunctionFragment;
    mint: FunctionFragment;
    meta_data: FunctionFragment;
    token_uri: FunctionFragment;
    owner_of: FunctionFragment;
    set_admin: FunctionFragment;
    set_approval_for_all: FunctionFragment;
    total_supply: FunctionFragment;
    transfer_from: FunctionFragment;
  };

  encodeFunctionData(functionFragment: "admin", values?: undefined): Uint8Array;
  encodeFunctionData(
    functionFragment: "approve",
    values: [AddressInput, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "approved",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "balance_of",
    values: [AddressInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "burn",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "constructor",
    values: [boolean, AddressInput, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "is_approved_for_all",
    values: [AddressInput, AddressInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "max_supply",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "mint",
    values: [BigNumberish, string]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "meta_data",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "token_uri",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "owner_of",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "set_admin",
    values: [AddressInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "set_approval_for_all",
    values: [boolean, AddressInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "total_supply",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "transfer_from",
    values: [AddressInput, AddressInput, BigNumberish]
  ): Uint8Array;

  decodeFunctionData(functionFragment: "admin", data: BytesLike): DecodedValue;
  decodeFunctionData(
    functionFragment: "approve",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "approved",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "balance_of",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(functionFragment: "burn", data: BytesLike): DecodedValue;
  decodeFunctionData(
    functionFragment: "constructor",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "is_approved_for_all",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "max_supply",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(functionFragment: "mint", data: BytesLike): DecodedValue;
  decodeFunctionData(
    functionFragment: "meta_data",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "token_uri",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "owner_of",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "set_admin",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "set_approval_for_all",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "total_supply",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "transfer_from",
    data: BytesLike
  ): DecodedValue;
}

export class NftAbi extends Contract {
  interface: NftAbiInterface;
  functions: {
    admin: InvokeFunction<[], AddressOutput>;

    approve: InvokeFunction<
      [approved: AddressInput, token_id: BigNumberish],
      void
    >;

    approved: InvokeFunction<[token_id: BigNumberish], AddressOutput>;

    balance_of: InvokeFunction<[owner: AddressInput], BN>;

    burn: InvokeFunction<[token_id: BigNumberish], void>;

    constructor: InvokeFunction<
      [access_control: boolean, admin: AddressInput, max_supply: BigNumberish],
      void
    >;

    is_approved_for_all: InvokeFunction<
      [operator: AddressInput, owner: AddressInput],
      boolean
    >;

    max_supply: InvokeFunction<[], BN>;

    mint: InvokeFunction<[amount: BigNumberish, uri: string], void>;

    meta_data: InvokeFunction<[token_id: BigNumberish], TokenMetaDataOutput>;

    token_uri: InvokeFunction<[token_id: BigNumberish], TokenURIOutput>;

    owner_of: InvokeFunction<[token_id: BigNumberish], AddressOutput>;

    set_admin: InvokeFunction<[admin: AddressInput], void>;

    set_approval_for_all: InvokeFunction<
      [approve: boolean, operator: AddressInput],
      void
    >;

    total_supply: InvokeFunction<[], BN>;

    transfer_from: InvokeFunction<
      [from: AddressInput, to: AddressInput, token_id: BigNumberish],
      void
    >;
  };
}
